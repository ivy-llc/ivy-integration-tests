name: update-test-results
on:
  push:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"
permissions:
  actions: read
jobs:
  update-kornia:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        file : [ test_color, test_contrib ]
        compile : [ F ]  # to also run the tests with backend_compilation, change this to: T, F
    steps:
      - name: Checkout üõéÔ∏èIvy
        uses: actions/checkout@v4
        with:
          repository: ivy-llc/ivy
          token: ${{ secrets.DEV_BOT_GENERAL_PAT }}
          ref: main
          persist-credentials: true

      - name: Get Job URL
        uses: Tiryoh/gha-jobid-action@v0
        id: jobs
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          job_name: ${{ github.job }} (${{ matrix.file }}, ${{ matrix.compile }})
          per_page: 64

      - name: Install ivy
        run: |
          sudo pip3 install -e .

      - name: Checkout ivy-integration-tests
        uses: actions/checkout@v4

      - name: Run Tests
        id: tests
        run: |
          ls
          pip3 install pymongo
          pip3 install pytest-json-report
          echo "html_url: ${{ steps.jobs.outputs.html_url }}"
          if [ "${{ steps.jobs.outputs.html_url }}" = "null" ]; then
            docker run --rm -v "$(pwd)":/ivy -v "$(pwd)"/.hypothesis:/.hypothesis transpileai/ivy:latest update_tests.sh kornia ${{ matrix.file }} ${{ matrix.compile }} https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} ${{ secrets.INTEGRATION_TESTS_DB_KEY }}
          else
            docker run --rm -v "$(pwd)":/ivy -v "$(pwd)"/.hypothesis:/.hypothesis transpileai/ivy:latest update_tests.sh kornia ${{ matrix.file }} ${{ matrix.compile }} ${{ steps.jobs.outputs.html_url }} ${{ secrets.INTEGRATION_TESTS_DB_KEY }}
          fi
