name: QA Integration Tests

on:
  push:
  workflow_dispatch:
  workflow_call:

permissions:
  actions: read
  contents: write

jobs:
  test-kornia:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        file : [ test_image ]
        compile : [ F ]
        target  : [ "tensorflow", "jax", "numpy" ]
    steps:
      - name: Checkout ivy-integration-tests
        uses: actions/checkout@v4
        with:
          path: ivy-integration-tests

      - name: Checkout Ivy
        uses: actions/checkout@v4
        with:
          repository: ivy-llc/ivy
          token: ${{ secrets.DEV_BOT_GENERAL_PAT }}
          path: ivy
          persist-credentials: true

      - name: Run Tests
        id: tests
        run: |
          docker run --rm -v "$(pwd)":/ivy -v "$(pwd)"/.hypothesis:/.hypothesis ivyllc/ivy:latest \
          ivy-integration-tests/update_s2s.sh kornia ${{ matrix.file }} linux-nightly ${{ matrix.compile }} ${{ matrix.target }} \
          https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} ${{ secrets.IVY_API_KEY }}

      - name: Prepare Artifact Name
        id: prepare
        shell: bash
        run: |
          safe_file_name=$(echo "${{ matrix.file }}" | sed 's/\//-/g')
          echo "safe_file_name=${safe_file_name}" >> $GITHUB_OUTPUT

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ steps.prepare.outputs.safe_file_name }}-${{ matrix.compile }}-${{ matrix.target }}
          path: |
            ivy-integration-tests/test_results.txt
            ivy-integration-tests/test_logs.txt

  analyze-results:
    runs-on: ubuntu-latest
    needs: test-kornia
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Test Results
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Calculate Passing Percentage
        run: |
          python calculate_passing_percentage.py
